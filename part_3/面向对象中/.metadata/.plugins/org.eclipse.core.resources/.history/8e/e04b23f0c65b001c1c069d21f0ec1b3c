package com.oopmid.继承性;

/*
 * -extends 继承关键字
 * -面向对象特征之二：继承性
 * 	--继承性的优点：
 * 		---减少代码冗余，提高了代码的复用性
 * 		---便于功能的扩展
 * 		---为多态性的使用，提供了前提
 * -继承的格式：class A extends B{}
 * 	--A:子类、派生类、subclass
 * 	--B:父类、超类、基类、superclass
 * -A就继承了B 类的属性、方法（构造器和super关键字，这里不行）
 * */
public class Inheritance {
	
	public static void main(String[] args) {
		
		Person p1 = new Person();
		p1.eat();
		//p1.sleep();
		
		System.out.println("*******************************");
		
		Student stu1 = new Student();
		//Student stu1 = new Student("张三",18,"电焊");
		//System.out.println(stu1.getName() + " "+stu1.getAge()+" "+stu1.getMajor());
		
		//stu1.age = 11;  //person中age和name已经private
		//stu1.name = "王五";//private 也继承到了，但是由于封装性的影响，不能直接调用了
		
		stu1.setName("李四");
		stu1.setAge(18);
		stu1.setMajor("挖机");
		System.out.println("姓名："+stu1.getName() + " ，年龄："+stu1.getAge()+" ，主修："+stu1.getMajor());
		stu1.eat();
		//stu1.sleep();  //已经使用private 私有化，对外不能调用，但是通过在eat（）方法中调用能行，即也继承到了
		stu1.study();
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}
}
